{"ast":null,"code":"import _objectSpread from\"C:/Sites/Railway/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback}from\"react\";import axios from\"axios\";import\"./styles/queueStyles.css\";// ✅ Ensure this file exists\nimport{calculateETC}from\"./utils/calculateETC\";import{sendWhatsAppNotification}from\"./utils/sendWhatsAppNotification\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Dashboard=()=>{const[orders,setOrders]=useState([]);const[activeOrdersCount,setActiveOrdersCount]=useState(0);// ✅ Fetch orders with debugging\nconst fetchOrders=useCallback(async()=>{try{console.log(\"🔄 Fetching orders from API...\");const response=await axios.get(\"https://queue-backendser.onrender.com/api/orders\");console.log(\"✅ Full API Orders Data:\",JSON.stringify(response.data,null,2));// Debugging API response\nconst updatedOrders=response.data.map(order=>_objectSpread(_objectSpread({},order),{},{dynamicETC:calculateETC(order.category,activeOrdersCount)||\"N/A\"}));setOrders(updatedOrders);// ✅ Directly set orders in state\nconsole.log(\"✅ Orders have been set in React state:\",updatedOrders);// Debugging state after update\n}catch(error){console.error(\"🚨 Error fetching orders:\",error);}},[activeOrdersCount]);// ✅ Fetch active orders count\nconst fetchActiveOrdersCount=async()=>{try{console.log(\"🔍 Fetching active orders count...\");const response=await axios.get(\"https://queue-backendser.onrender.com/api/active-orders-count\",{timeout:10000});setActiveOrdersCount(response.data.activeOrders);console.log(\"✅ Active orders count:\",response.data.activeOrders);}catch(error){console.error(\"🚨 Error fetching active orders count:\",error.message);}};// ✅ Calls fetching functions when the component loads\nuseEffect(()=>{fetchOrders();fetchActiveOrdersCount();},[fetchOrders]);const updateStatus=async(orderId,newStatus,clientNumber)=>{console.log(\"\\uD83D\\uDEE0 Updating order \".concat(orderId,\" to \").concat(newStatus));try{await axios.put(\"https://queue-backendser.onrender.com/api/orders/\".concat(orderId),{current_status:newStatus});console.log(\"✅ Order updated successfully!\");fetchOrders();if(newStatus===\"Ready\"){sendWhatsAppNotification(clientNumber,orderId,calculateETC(newStatus,activeOrdersCount));}}catch(error){console.error(\"🚨 Error updating order status:\",error);}};console.log(\"🛠 Orders State in React CC:\",orders.map(order=>({id:order.id,transaction_id:order.transaction_id,colour_code:order.colour_code||\"Missing\"})));return/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-4\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-center\",children:\"Paints Queue Dashboard\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Active Orders: \",/*#__PURE__*/_jsx(\"strong\",{children:activeOrdersCount})]}),/*#__PURE__*/_jsxs(\"table\",{className:\"table table-bordered\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Transaction ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Color Code\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Paint Type\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Start Time\"}),/*#__PURE__*/_jsx(\"th\",{children:\"ETC\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Client Contact\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Action\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:orders.map(order=>/*#__PURE__*/_jsxs(\"tr\",{className:getOrderClass(order.category),children:[/*#__PURE__*/_jsx(\"td\",{children:order.transaction_id}),/*#__PURE__*/_jsx(\"td\",{children:order.colour_code!==undefined?order.colour_code:\"N/A\"}),/*#__PURE__*/_jsx(\"td\",{children:order.paint_type}),/*#__PURE__*/_jsx(\"td\",{children:order.start_time}),/*#__PURE__*/_jsx(\"td\",{children:order.dynamicETC}),/*#__PURE__*/_jsx(\"td\",{children:order.current_status}),/*#__PURE__*/_jsx(\"td\",{children:order.client_contact}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"select\",{className:\"form-select\",onChange:e=>updateStatus(order.id,e.target.value,order.client_contact),children:[order.current_status&&![\"Mixing\",\"Ready\"].includes(order.current_status)&&/*#__PURE__*/_jsx(\"option\",{value:order.current_status,children:order.current_status}),/*#__PURE__*/_jsx(\"option\",{value:\"Mixing\",children:\"Mixing\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Ready\",children:\"Ready\"})]})})]},order.id))})]})]});};// ✅ Color coding for priority-based orders\nconst getOrderClass=category=>{if(category===\"New Mix\")return\"urgent\";if(category===\"Reorder Mix\")return\"warning\";if(category===\"Colour Code\")return\"standard\";return\"\";};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","calculateETC","sendWhatsAppNotification","jsx","_jsx","jsxs","_jsxs","Dashboard","orders","setOrders","activeOrdersCount","setActiveOrdersCount","fetchOrders","console","log","response","get","JSON","stringify","data","updatedOrders","map","order","_objectSpread","dynamicETC","category","error","fetchActiveOrdersCount","timeout","activeOrders","message","updateStatus","orderId","newStatus","clientNumber","concat","put","current_status","id","transaction_id","colour_code","className","children","getOrderClass","undefined","paint_type","start_time","client_contact","onChange","e","target","value","includes"],"sources":["C:/Sites/Railway/client/src/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./styles/queueStyles.css\"; // ✅ Ensure this file exists\r\nimport { calculateETC } from \"./utils/calculateETC\"; \r\nimport { sendWhatsAppNotification } from \"./utils/sendWhatsAppNotification\"; \r\n\r\nconst Dashboard = () => {\r\n    const [orders, setOrders] = useState([]);\r\n    const [activeOrdersCount, setActiveOrdersCount] = useState(0); \r\n\r\n    // ✅ Fetch orders with debugging\r\n   const fetchOrders = useCallback(async () => {\r\n    try {\r\n        console.log(\"🔄 Fetching orders from API...\");\r\n        const response = await axios.get(\"https://queue-backendser.onrender.com/api/orders\");\r\n        console.log(\"✅ Full API Orders Data:\", JSON.stringify(response.data, null, 2)); // Debugging API response\r\n\r\n        const updatedOrders = response.data.map(order => ({\r\n            ...order,\r\n            dynamicETC: calculateETC(order.category, activeOrdersCount) || \"N/A\"\r\n        }));\r\n\r\n        setOrders(updatedOrders); // ✅ Directly set orders in state\r\n        console.log(\"✅ Orders have been set in React state:\", updatedOrders); // Debugging state after update\r\n    } catch (error) {\r\n        console.error(\"🚨 Error fetching orders:\", error);\r\n    }\r\n}, [activeOrdersCount]);\r\n\r\n    // ✅ Fetch active orders count\r\n    const fetchActiveOrdersCount = async () => {\r\n        try {\r\n            console.log(\"🔍 Fetching active orders count...\");\r\n            const response = await axios.get(\"https://queue-backendser.onrender.com/api/active-orders-count\", { timeout: 10000 });\r\n            setActiveOrdersCount(response.data.activeOrders);\r\n            console.log(\"✅ Active orders count:\", response.data.activeOrders);\r\n        } catch (error) {\r\n            console.error(\"🚨 Error fetching active orders count:\", error.message);\r\n        }\r\n    };\r\n\r\n    // ✅ Calls fetching functions when the component loads\r\n    useEffect(() => {\r\n        fetchOrders();\r\n        fetchActiveOrdersCount();\r\n    }, [fetchOrders]);\r\n\r\n    const updateStatus = async (orderId, newStatus, clientNumber) => {\r\n        console.log(`🛠 Updating order ${orderId} to ${newStatus}`);\r\n        try {\r\n            await axios.put(`https://queue-backendser.onrender.com/api/orders/${orderId}`, { current_status: newStatus });\r\n            console.log(\"✅ Order updated successfully!\");\r\n            fetchOrders();\r\n\r\n            if (newStatus === \"Ready\") {\r\n                sendWhatsAppNotification(clientNumber, orderId, calculateETC(newStatus, activeOrdersCount));\r\n            }\r\n        } catch (error) {\r\n            console.error(\"🚨 Error updating order status:\", error);\r\n        }\r\n    };\r\n\r\n    console.log(\"🛠 Orders State in React CC:\", orders.map(order => ({\r\n    \r\n        id: order.id,\r\n    transaction_id: order.transaction_id,\r\n    colour_code: order.colour_code || \"Missing\"\r\n})));\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <h1 className=\"text-center\">Paints Queue Dashboard</h1>\r\n            <p>Active Orders: <strong>{activeOrdersCount}</strong></p> \r\n\r\n            <table className=\"table table-bordered\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Transaction ID</th>\r\n                        <th>Color Code</th> \r\n                        <th>Paint Type</th>\r\n                        <th>Start Time</th>\r\n                        <th>ETC</th>\r\n                        <th>Status</th>\r\n                        <th>Client Contact</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {orders.map(order => (\r\n                        <tr key={order.id} className={getOrderClass(order.category)}> \r\n                            <td>{order.transaction_id}</td>\r\n                            <td>{order.colour_code !== undefined ? order.colour_code : \"N/A\"}</td>\r\n                            <td>{order.paint_type}</td>\r\n                            <td>{order.start_time}</td>\r\n                            <td>{order.dynamicETC}</td> \r\n                            <td>{order.current_status}</td>\r\n                            <td>{order.client_contact}</td>\r\n                            <td>\r\n                                <select\r\n                                    className=\"form-select\"\r\n                                    onChange={(e) => updateStatus(order.id, e.target.value, order.client_contact)}\r\n                                >\r\n                                    {order.current_status && ![\"Mixing\", \"Ready\"].includes(order.current_status) && (\r\n                                        <option value={order.current_status}>{order.current_status}</option> \r\n                                    )}\r\n                                    <option value=\"Mixing\">Mixing</option> \r\n                                    <option value=\"Ready\">Ready</option> \r\n                                </select>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\n// ✅ Color coding for priority-based orders\r\nconst getOrderClass = (category) => {\r\n    if (category === \"New Mix\") return \"urgent\";  \r\n    if (category === \"Reorder Mix\") return \"warning\"; \r\n    if (category === \"Colour Code\") return \"standard\"; \r\n    return \"\"; \r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}